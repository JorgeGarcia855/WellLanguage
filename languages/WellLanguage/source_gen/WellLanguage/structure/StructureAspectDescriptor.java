package WellLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.EnumerationDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import jetbrains.mps.smodel.runtime.DataTypeDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptCasingProperties = createDescriptorForCasingProperties();
  /*package*/ final ConceptDescriptor myConceptCoordinates = createDescriptorForCoordinates();
  /*package*/ final ConceptDescriptor myConceptDepositWell = createDescriptorForDepositWell();
  /*package*/ final ConceptDescriptor myConceptDownhole = createDescriptorForDownhole();
  /*package*/ final ConceptDescriptor myConceptFluid = createDescriptorForFluid();
  /*package*/ final ConceptDescriptor myConceptHorizontalWell = createDescriptorForHorizontalWell();
  /*package*/ final ConceptDescriptor myConceptInjectionWell = createDescriptorForInjectionWell();
  /*package*/ final ConceptDescriptor myConceptMotor = createDescriptorForMotor();
  /*package*/ final ConceptDescriptor myConceptProductionWell = createDescriptorForProductionWell();
  /*package*/ final ConceptDescriptor myConceptPumpingUnit = createDescriptorForPumpingUnit();
  /*package*/ final ConceptDescriptor myConceptSurfaceProperties = createDescriptorForSurfaceProperties();
  /*package*/ final ConceptDescriptor myConceptWell = createDescriptorForWell();
  /*package*/ final EnumerationDescriptor myEnumerationMotorType = new EnumerationDescriptor_MotorType();
  /*package*/ final EnumerationDescriptor myEnumerationPumpUnitGeometry = new EnumerationDescriptor_PumpUnitGeometry();
  /*package*/ final EnumerationDescriptor myEnumerationRotation = new EnumerationDescriptor_Rotation();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptCasingProperties, myConceptCoordinates, myConceptDepositWell, myConceptDownhole, myConceptFluid, myConceptHorizontalWell, myConceptInjectionWell, myConceptMotor, myConceptProductionWell, myConceptPumpingUnit, myConceptSurfaceProperties, myConceptWell);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.CasingProperties:
        return myConceptCasingProperties;
      case LanguageConceptSwitch.Coordinates:
        return myConceptCoordinates;
      case LanguageConceptSwitch.DepositWell:
        return myConceptDepositWell;
      case LanguageConceptSwitch.Downhole:
        return myConceptDownhole;
      case LanguageConceptSwitch.Fluid:
        return myConceptFluid;
      case LanguageConceptSwitch.HorizontalWell:
        return myConceptHorizontalWell;
      case LanguageConceptSwitch.InjectionWell:
        return myConceptInjectionWell;
      case LanguageConceptSwitch.Motor:
        return myConceptMotor;
      case LanguageConceptSwitch.ProductionWell:
        return myConceptProductionWell;
      case LanguageConceptSwitch.PumpingUnit:
        return myConceptPumpingUnit;
      case LanguageConceptSwitch.SurfaceProperties:
        return myConceptSurfaceProperties;
      case LanguageConceptSwitch.Well:
        return myConceptWell;
      default:
        return null;
    }
  }

  @Override
  public Collection<DataTypeDescriptor> getDataTypeDescriptors() {
    return Arrays.asList(myEnumerationMotorType, myEnumerationPumpUnitGeometry, myEnumerationRotation);
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForCasingProperties() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WellLanguage", "CasingProperties", 0x1f9e61a5590e4e5eL, 0x9835cf0a05fde422L, 0x6e825ec7df0e6c14L);
    b.class_(false, false, false);
    b.origin("r:11041e4c-db17-433f-9948-c6a16ce7eaf6(WellLanguage.structure)/7963031303678225428");
    b.version(3);
    b.property("pressure", 0x6e825ec7df0e6c16L).type(MetaIdFactory.dataTypeId(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x120aa230057L)).origin("7963031303678225430").done();
    b.property("cut", 0x6e825ec7df0e6c18L).type(MetaIdFactory.dataTypeId(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x120aa230057L)).origin("7963031303678225432").done();
    b.property("surfaceFluidLevel", 0x6e825ec7df0e6c1cL).type(MetaIdFactory.dataTypeId(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x120aa230057L)).origin("7963031303678225436").done();
    b.property("pumpFluidLevel", 0x6e825ec7df0e6c21L).type(MetaIdFactory.dataTypeId(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x120aa230057L)).origin("7963031303678225441").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCoordinates() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WellLanguage", "Coordinates", 0x1f9e61a5590e4e5eL, 0x9835cf0a05fde422L, 0x14a09e31147cce5L);
    b.class_(false, false, false);
    b.origin("r:11041e4c-db17-433f-9948-c6a16ce7eaf6(WellLanguage.structure)/92897613166660837");
    b.version(3);
    b.property("x", 0x14a09e31147cce6L).type(MetaIdFactory.dataTypeId(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x120aa230057L)).origin("92897613166660838").done();
    b.property("y", 0x14a09e31147cce8L).type(MetaIdFactory.dataTypeId(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x120aa230057L)).origin("92897613166660840").done();
    b.property("z", 0x14a09e31147ccebL).type(MetaIdFactory.dataTypeId(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x120aa230057L)).origin("92897613166660843").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDepositWell() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WellLanguage", "DepositWell", 0x1f9e61a5590e4e5eL, 0x9835cf0a05fde422L, 0x6f377013607a9598L);
    b.class_(false, false, true);
    // extends: WellLanguage.structure.Well
    b.super_(0x1f9e61a5590e4e5eL, 0x9835cf0a05fde422L, 0x4787dd1b0fb9452cL);
    b.origin("r:11041e4c-db17-433f-9948-c6a16ce7eaf6(WellLanguage.structure)/8013997290454422936");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDownhole() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WellLanguage", "Downhole", 0x1f9e61a5590e4e5eL, 0x9835cf0a05fde422L, 0x14a09e31149b0a1L);
    b.class_(false, false, false);
    b.origin("r:11041e4c-db17-433f-9948-c6a16ce7eaf6(WellLanguage.structure)/92897613166784673");
    b.version(3);
    b.property("topPerforation", 0x7e18434ae3091f4fL).type(MetaIdFactory.dataTypeId(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x120aa230057L)).origin("9086086237135642447").done();
    b.property("bottomPerforation", 0x7e18434ae3091f52L).type(MetaIdFactory.dataTypeId(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x120aa230057L)).origin("9086086237135642450").done();
    b.property("anchor", 0x7e18434ae3091f56L).type(MetaIdFactory.dataTypeId(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x120aa230057L)).origin("9086086237135642454").done();
    b.property("plugBackTotalDepth", 0x7e18434ae3091f5cL).type(MetaIdFactory.dataTypeId(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x120aa230057L)).origin("9086086237135642460").done();
    b.property("pumpMeasuredDepth", 0x7e18434ae3091f62L).type(MetaIdFactory.dataTypeId(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x120aa230057L)).origin("9086086237135642466").done();
    b.property("pumpVerticalMeasuredDepth", 0x7e18434ae3091f68L).type(MetaIdFactory.dataTypeId(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x120aa230057L)).origin("9086086237135642472").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForFluid() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WellLanguage", "Fluid", 0x1f9e61a5590e4e5eL, 0x9835cf0a05fde422L, 0x14a09e31149cc8dL);
    b.class_(false, false, false);
    b.origin("r:11041e4c-db17-433f-9948-c6a16ce7eaf6(WellLanguage.structure)/92897613166791821");
    b.version(3);
    b.property("oil", 0x6e825ec7df0e6bf2L).type(MetaIdFactory.dataTypeId(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x120aa230057L)).origin("7963031303678225394").done();
    b.property("water", 0x6e825ec7df0e6bf4L).type(MetaIdFactory.dataTypeId(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x120aa230057L)).origin("7963031303678225396").done();
    b.property("gas", 0x6e825ec7df0e6bfbL).type(MetaIdFactory.dataTypeId(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x120aa230057L)).origin("7963031303678225403").done();
    b.property("pressure", 0x6e825ec7df0e6bffL).type(MetaIdFactory.dataTypeId(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x120aa230057L)).origin("7963031303678225407").done();
    b.property("gradient", 0x6e825ec7df0e6c05L).type(MetaIdFactory.dataTypeId(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x120aa230057L)).origin("7963031303678225413").done();
    b.property("temperature", 0x6e825ec7df0e6c0cL).type(MetaIdFactory.dataTypeId(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x120aa230057L)).origin("7963031303678225420").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForHorizontalWell() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WellLanguage", "HorizontalWell", 0x1f9e61a5590e4e5eL, 0x9835cf0a05fde422L, 0x6f377013607d7d5eL);
    b.class_(false, false, true);
    // extends: WellLanguage.structure.Well
    b.super_(0x1f9e61a5590e4e5eL, 0x9835cf0a05fde422L, 0x4787dd1b0fb9452cL);
    b.origin("r:11041e4c-db17-433f-9948-c6a16ce7eaf6(WellLanguage.structure)/8013997290454613342");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForInjectionWell() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WellLanguage", "InjectionWell", 0x1f9e61a5590e4e5eL, 0x9835cf0a05fde422L, 0x7c11e1450a8fc74aL);
    b.class_(false, false, true);
    // extends: WellLanguage.structure.Well
    b.super_(0x1f9e61a5590e4e5eL, 0x9835cf0a05fde422L, 0x4787dd1b0fb9452cL);
    b.origin("r:11041e4c-db17-433f-9948-c6a16ce7eaf6(WellLanguage.structure)/8940174421953333066");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForMotor() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WellLanguage", "Motor", 0x1f9e61a5590e4e5eL, 0x9835cf0a05fde422L, 0x14a09e31149b081L);
    b.class_(false, false, false);
    b.origin("r:11041e4c-db17-433f-9948-c6a16ce7eaf6(WellLanguage.structure)/92897613166784641");
    b.version(3);
    b.property("manufacturer", 0x14a09e31149b083L).type(PrimitiveTypeId.STRING).origin("92897613166784643").done();
    b.property("type", 0x14a09e31149b09bL).type(MetaIdFactory.dataTypeId(0x1f9e61a5590e4e5eL, 0x9835cf0a05fde422L, 0x14a09e31149b090L)).origin("92897613166784667").done();
    b.property("inertia", 0x14a09e31149b085L).type(MetaIdFactory.dataTypeId(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x120aa230057L)).origin("92897613166784645").done();
    b.property("maxAmp", 0x14a09e31149b089L).type(MetaIdFactory.dataTypeId(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x120aa230057L)).origin("92897613166784649").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForProductionWell() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WellLanguage", "ProductionWell", 0x1f9e61a5590e4e5eL, 0x9835cf0a05fde422L, 0x6f377013607d7d5cL);
    b.class_(false, false, true);
    // extends: WellLanguage.structure.Well
    b.super_(0x1f9e61a5590e4e5eL, 0x9835cf0a05fde422L, 0x4787dd1b0fb9452cL);
    b.origin("r:11041e4c-db17-433f-9948-c6a16ce7eaf6(WellLanguage.structure)/8013997290454613340");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPumpingUnit() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WellLanguage", "PumpingUnit", 0x1f9e61a5590e4e5eL, 0x9835cf0a05fde422L, 0x14a09e31149b05dL);
    b.class_(false, false, false);
    b.origin("r:11041e4c-db17-433f-9948-c6a16ce7eaf6(WellLanguage.structure)/92897613166784605");
    b.version(3);
    b.property("id", 0x14a09e31149b062L).type(PrimitiveTypeId.STRING).origin("92897613166784610").done();
    b.property("unitGeo", 0x14a09e31149b064L).type(MetaIdFactory.dataTypeId(0x1f9e61a5590e4e5eL, 0x9835cf0a05fde422L, 0x14a09e31149b069L)).origin("92897613166784612").done();
    b.property("description", 0x14a09e31149b07bL).type(PrimitiveTypeId.STRING).origin("92897613166784635").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSurfaceProperties() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WellLanguage", "SurfaceProperties", 0x1f9e61a5590e4e5eL, 0x9835cf0a05fde422L, 0x7e18434ae3095a34L);
    b.class_(false, false, false);
    b.origin("r:11041e4c-db17-433f-9948-c6a16ce7eaf6(WellLanguage.structure)/9086086237135657524");
    b.version(3);
    b.property("id", 0x7e18434ae3095a36L).type(PrimitiveTypeId.INTEGER).origin("9086086237135657526").done();
    b.property("stroke", 0x7e18434ae3095a3cL).type(MetaIdFactory.dataTypeId(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x120aa230057L)).origin("9086086237135657532").done();
    b.property("rotation", 0x7e18434ae3095a41L).type(MetaIdFactory.dataTypeId(0x1f9e61a5590e4e5eL, 0x9835cf0a05fde422L, 0x7e18434ae3095a46L)).origin("9086086237135657537").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForWell() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WellLanguage", "Well", 0x1f9e61a5590e4e5eL, 0x9835cf0a05fde422L, 0x4787dd1b0fb9452cL);
    b.class_(false, true, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:11041e4c-db17-433f-9948-c6a16ce7eaf6(WellLanguage.structure)/5154331406846477612");
    b.version(3);
    b.property("casingSize", 0x6f377013607a958eL).type(MetaIdFactory.dataTypeId(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x120aa230057L)).origin("8013997290454422926").done();
    b.property("pressure", 0x6f377013607a958fL).type(MetaIdFactory.dataTypeId(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x120aa230057L)).origin("8013997290454422927").done();
    b.property("temperature", 0x6f377013607a9590L).type(MetaIdFactory.dataTypeId(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x120aa230057L)).origin("8013997290454422928").done();
    b.property("visibility", 0x3ea0f8753d1b49d0L).type(PrimitiveTypeId.BOOLEAN).origin("4512880009045297616").done();
    b.aggregate("coordinates", 0x6f377013607a958cL).target(0x1f9e61a5590e4e5eL, 0x9835cf0a05fde422L, 0x14a09e31147cce5L).optional(true).ordered(true).multiple(false).origin("8013997290454422924").done();
    b.aggregate("downholeProps", 0x6f377013607d7d60L).target(0x1f9e61a5590e4e5eL, 0x9835cf0a05fde422L, 0x14a09e31149b0a1L).optional(true).ordered(true).multiple(true).origin("8013997290454613344").done();
    b.aggregate("fluidProps", 0x6f377013607d7d63L).target(0x1f9e61a5590e4e5eL, 0x9835cf0a05fde422L, 0x14a09e31149cc8dL).optional(true).ordered(true).multiple(true).origin("8013997290454613347").done();
    b.aggregate("pumpUnitProps", 0x51643a35ce93a256L).target(0x1f9e61a5590e4e5eL, 0x9835cf0a05fde422L, 0x14a09e31149b05dL).optional(true).ordered(true).multiple(true).origin("5864876617516687958").done();
    b.aggregate("motorProps", 0x51643a35ce934d39L).target(0x1f9e61a5590e4e5eL, 0x9835cf0a05fde422L, 0x14a09e31149b081L).optional(true).ordered(true).multiple(true).origin("5864876617516666169").done();
    return b.create();
  }
}
