package WellLanguage.editor;

/*Generated by MPS */

import jetbrains.mps.editor.runtime.descriptor.AbstractEditorBuilder;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.openapi.editor.EditorContext;
import jetbrains.mps.openapi.editor.cells.EditorCell;
import jetbrains.mps.nodeEditor.cells.EditorCell_Collection;
import jetbrains.mps.nodeEditor.cellLayout.CellLayout_Vertical;
import jetbrains.mps.openapi.editor.style.Style;
import jetbrains.mps.editor.runtime.style.StyleImpl;
import WellLanguage.editor.Styles_StyleSheet.arialfontStyleClass;

/*package*/ class Well_EditorBuilder_a extends AbstractEditorBuilder {
  @NotNull
  private SNode myNode;

  public Well_EditorBuilder_a(@NotNull EditorContext context, @NotNull SNode node) {
    super(context);
    myNode = node;
  }

  @NotNull
  @Override
  public SNode getNode() {
    return myNode;
  }

  /*package*/ EditorCell createCell() {
    return createCollection_0();
  }

  private EditorCell createCollection_0() {
    EditorCell_Collection editorCell = new EditorCell_Collection(getEditorContext(), myNode, new CellLayout_Vertical());
    editorCell.setCellId("Collection_gkjbwf_a");
    editorCell.setBig(true);
    setCellContext(editorCell);
    Style style = new StyleImpl();
    new arialfontStyleClass(this).apply(style, editorCell);
    editorCell.getStyle().putAll(style);
    editorCell.addEditorCell(createComponent_0());
    editorCell.addEditorCell(createComponent_1());
    editorCell.addEditorCell(createComponent_2());
    editorCell.addEditorCell(createComponent_3());
    editorCell.addEditorCell(createComponent_4());
    return editorCell;
  }
  private EditorCell createComponent_0() {
    EditorCell editorCell = getCellFactory().createEditorComponentCell(myNode, "WellLanguage.editor.BaseMetadata");
    return editorCell;
  }
  private EditorCell createComponent_1() {
    EditorCell editorCell = getCellFactory().createEditorComponentCell(myNode, "WellLanguage.editor.TeamWorkers");
    return editorCell;
  }
  private EditorCell createComponent_2() {
    EditorCell editorCell = getCellFactory().createEditorComponentCell(myNode, "WellLanguage.editor.MainFeatures");
    return editorCell;
  }
  private EditorCell createComponent_3() {
    EditorCell editorCell = getCellFactory().createEditorComponentCell(myNode, "WellLanguage.editor.Coding");
    return editorCell;
  }
  private EditorCell createComponent_4() {
    EditorCell editorCell = getCellFactory().createEditorComponentCell(myNode, "WellLanguage.editor.OptionsButtons");
    return editorCell;
  }
}
